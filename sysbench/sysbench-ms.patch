Only in sysbench-0.4.8.orig/doc: manual.html
diff -aur sysbench-0.4.8.orig/sysbench/sb_logger.c sysbench-0.4.8/sysbench/sb_logger.c
--- sysbench-0.4.8.orig/sysbench/sb_logger.c	2006-04-03 04:39:09.000000000 -0700
+++ sysbench-0.4.8/sysbench/sb_logger.c	2007-03-01 14:04:49.000000000 -0800
@@ -573,12 +573,12 @@
            NS2SEC(get_sum_time(&t)));
 
   log_text(LOG_NOTICE, "    per-request statistics:");
-  log_text(LOG_NOTICE, "         min:                            %.4fs",
-           NS2SEC(get_min_time(&t)));
-  log_text(LOG_NOTICE, "         avg:                            %.4fs",
-           NS2SEC(get_avg_time(&t)));
-  log_text(LOG_NOTICE, "         max:                            %.4fs",
-           NS2SEC(get_max_time(&t)));
+  log_text(LOG_NOTICE, "         min:                            %10.2fms",
+           NS2MS(get_min_time(&t)));
+  log_text(LOG_NOTICE, "         avg:                            %10.2fms",
+           NS2MS(get_avg_time(&t)));
+  log_text(LOG_NOTICE, "         max:                            %10.2fms",
+           NS2MS(get_max_time(&t)));
 
   /* Print approx. percentile value for event execution times */
   if (t.events > 0)
@@ -599,8 +599,8 @@
   
     /* Calculate response time corresponding to this element */
     optime = exp((double)i / oper_log_mult + oper_log_deduct);
-    log_text(LOG_NOTICE, "         approx. %3d percentile:         %.4fs",
-             oper_percentile, NS2SEC(optime));
+    log_text(LOG_NOTICE, "         approx. %3d percentile:         %10.2fms",
+             oper_percentile, NS2MS(optime));
   }
   log_text(LOG_NOTICE, "");
 
diff -aur sysbench-0.4.8.orig/sysbench/sb_timer.h sysbench-0.4.8/sysbench/sb_timer.h
--- sysbench-0.4.8.orig/sysbench/sb_timer.h	2006-03-09 23:44:09.000000000 -0800
+++ sysbench-0.4.8/sysbench/sb_timer.h	2007-03-01 13:59:58.000000000 -0800
@@ -34,9 +34,11 @@
 #endif
 
 /* Convert nanoseconds to seconds and vice versa */
-#define NS2SEC(msec) ((msec)/1000000000.)
+#define NS2SEC(nsec) ((nsec)/1000000000.)
 #define SEC2NS(sec)  ((sec)*1000000000ULL)
 
+#define NS2MS(nsec) ((nsec)/1000000.)
+#define MS2NS(sec)  ((sec)*1000000ULL)
 
 /* Wrapper over various *gettime* functions */
 #ifdef HAVE_CLOCK_GETTIME
Only in sysbench-0.4.8: sysbench-timing.patch
