Binary files sysbench-0.4.7.orig/sysbench/sysbench and sysbench-0.4.7.jcole/sysbench/sysbench differ
diff -ru sysbench-0.4.7.orig/sysbench/sysbench.c sysbench-0.4.7.jcole/sysbench/sysbench.c
--- sysbench-0.4.7.orig/sysbench/sysbench.c	2006-01-31 06:15:53.000000000 -0500
+++ sysbench-0.4.7.jcole/sysbench/sysbench.c	2006-07-26 19:18:23.000000000 -0400
@@ -390,6 +390,10 @@
   /* print test mode */
   print_run_mode(test);
 
+  /* prepare test */
+  if (test->ops.prepare != NULL && test->ops.prepare() != 0)
+    return 1;
+
   /* initialize and start timers */
   sb_timer_init(&sb_globals.exec_timer);
   for(i = 0; i < sb_globals.num_threads; i++)
@@ -400,10 +404,6 @@
   }    
   sb_timer_start(&sb_globals.exec_timer);
 
-  /* prepare test */
-  if (test->ops.prepare != NULL && test->ops.prepare() != 0)
-    return 1;
-
   pthread_mutex_init(&sb_globals.exec_mutex, NULL);
 
   /* start mutex used for barrier */
Binary files sysbench-0.4.7.orig/sysbench/sysbench.o and sysbench-0.4.7.jcole/sysbench/sysbench.o differ
Binary files sysbench-0.4.7.orig/sysbench/tests/fileio/libsbfileio.a and sysbench-0.4.7.jcole/sysbench/tests/fileio/libsbfileio.a differ
Binary files sysbench-0.4.7.orig/sysbench/tests/fileio/libsbfileio_a-sb_fileio.o and sysbench-0.4.7.jcole/sysbench/tests/fileio/libsbfileio_a-sb_fileio.o differ
diff -ru sysbench-0.4.7.orig/sysbench/tests/fileio/sb_fileio.c sysbench-0.4.7.jcole/sysbench/tests/fileio/sb_fileio.c
--- sysbench-0.4.7.orig/sysbench/tests/fileio/sb_fileio.c	2006-07-26 01:23:33.000000000 -0400
+++ sysbench-0.4.7.jcole/sysbench/tests/fileio/sb_fileio.c	2006-07-26 20:46:47.000000000 -0400
@@ -291,8 +291,11 @@
 int file_prepare(void)
 {
   unsigned int  i;
+  off_t         x;
   char          file_name[512];
+  char          buf[1];
 
+  buf[0] = 0;
   for (i=0; i < num_files; i++)
   {
     snprintf(file_name, sizeof(file_name), "test_file.%d",i);
@@ -309,6 +312,14 @@
       log_errno(LOG_FATAL, "Cannot open file");
       return 1; 
     }
+    if(1 && test_mode == MODE_WRITE) {
+      log_text(LOG_INFO, "Filling file: %s", file_name);
+      for(x=0; x < file_size; x+= 512) {
+        pwrite(files[i], buf, 1, x);
+      }
+      log_text(LOG_INFO, "Syncing file: %s", file_name);
+      fsync(files[i]);
+    }
   }
 
 #ifdef HAVE_MMAP
